name: CI
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      MPLBACKEND: Agg
      PIP_DISABLE_PIP_VERSION_CHECK: 1
      PYTHONPATH: ${{ github.workspace }}
      TORCH_VERSION: "2.2.0"
      PYG_VERSION: "2.5.3"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install PyTorch (CPU) + PyG compiled wheels
        run: |
          python -m pip install --upgrade pip wheel setuptools
          # Torch (CPU)
          pip install torch==${TORCH_VERSION} --index-url https://download.pytorch.org/whl/cpu
          # PyG compiled deps matched to Torch version
          pip install \
            pyg_lib \
            torch_scatter \
            torch_sparse \
            torch_cluster \
            torch_spline_conv \
            -f https://data.pyg.org/whl/torch-${TORCH_VERSION}+cpu.html
          # PyG meta package
          pip install torch-geometric==${PYG_VERSION}

      - name: Install project deps
        run: |
          pip install numpy pandas scikit-learn scipy xgboost pyyaml tqdm networkx matplotlib tensorboard
          pip install shap plotly streamlit  # optional (not needed for tests)
          pip install pytest

      - name: Show versions (debug)
        run: |
          python - <<'PY'
          import torch, torch_geometric as pyg, sys
          print("Torch:", torch.__version__)
          print("CUDA available:", torch.cuda.is_available())
          print("PyG:", pyg.__version__)
          PY

      - name: Run tests
        run: pytest -q
